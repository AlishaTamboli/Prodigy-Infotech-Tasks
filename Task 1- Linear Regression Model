import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score

# Sample dataset with more data points
data = {
    'square_footage': [1500, 2000, 2500, 3000, 3500, 1800, 2200, 2700, 3200, 3700, 1600, 2100, 2600, 3100, 3600],
    'bedrooms': [3, 4, 3, 5, 4, 2, 3, 3, 5, 4, 2, 3, 3, 5, 4],
    'bathrooms': [2, 3, 2, 4, 3, 2, 2, 3, 4, 3, 1, 2, 2, 4, 3],
    'price': [300000, 400000, 350000, 500000, 450000, 320000, 380000, 340000, 520000, 460000, 310000, 390000, 355000, 510000, 455000]
}

# Convert the dataset to a pandas DataFrame
df = pd.DataFrame(data)

# Features (square footage, bedrooms, bathrooms)
X = df[['square_footage', 'bedrooms', 'bathrooms']]
# Target (price)
y = df['price']

# Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Create the model
model = LinearRegression()

# Train the model
model.fit(X_train, y_train)

# Make predictions
y_pred = model.predict(X_test)

# Calculate Mean Squared Error
mse = mean_squared_error(y_test, y_pred)

# Calculate R-squared score
r2 = r2_score(y_test, y_pred)

print(f"Mean Squared Error: {mse}")
print(f"R-squared Score: {r2}")
